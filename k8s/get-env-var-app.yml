---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-java
  labels:
    app: springboot-java
spec:
  selector:
    matchLabels:
      app: springboot-java
  replicas: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "internal-app"
        vault.hashicorp.com/agent-inject-secret-database-config.properties: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config.properties: |
          {{- with secret "internal/data/database/config" -}}
          POSTGRESS_CONNECTION=postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
          {{- end -}}
      labels:
        app: springboot-java
    spec:
      serviceAccountName: internal-app
      containers:
        - name: springboot-java
          image: grenader/java-k8s:zero-to-hero-show-env
          imagePullPolicy: Always
          command: ["/cnb/lifecycle/launcher"]
          env:
            - name: greetings.message
              value: "Hello from Kuberneted and Vault"
            - name: myown.property
              value: "Test Property Value"
            - name: myown.varian
              value: "Test Property Variant"
            - name: management.endpoints.web.exposure.include
              value: "health,info,env"
            - name: SPRING_CONFIG_LOCATION
              value: "/vault/secrets/database-config.properties,classpath:/application.properties"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-java
  name: springboot-service
spec:
  allocateLoadBalancerNodePorts: true
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: springboot-java
  type: LoadBalancer
